features(.innov, ljung_box, lag = 24) %>%
kable(format = "html",
caption = "Ljung-Box Test Results (ETS Model)") %>%
kable_styling(full_width = FALSE)
# Chunk 26
retail_train %>%
model(ARIMA(log(Turnover) ~ 1 + pdq(0,0,6) + PDQ(0,1,2))) %>%
forecast(h = "24 months") %>%
hilo() %>%
kable(format = "html",
caption = "Point Forecasts for Test Set (ARIMA Model)") %>%
kable_styling(full_width = FALSE) %>%
scroll_box(height = "300px")
# Chunk 27
retail_train %>%
model(
trend = ETS(Turnover ~ error("M") + trend("A") + season("M"))
) %>%
forecast(h = "24 months") %>%
hilo() %>%
kable(format = "html",
caption = "Point Forecasts for Test Set (ETS Model)") %>%
kable_styling(full_width = FALSE) %>%
scroll_box(height = "300px")
# Chunk 28: fig-8
#| label: fig-8
#| fig-cap: Forecast of Victoria's monthly retail turnover for 2021-2022 (test set) using ARIMA and ETS models. The plot shows the model predictions and their respective intervals, providing a range of possible future values.
train_combined_fit <- retail_train %>%
model(
arima = ARIMA(log(Turnover) ~ 1 + pdq(0,0,6) + PDQ(0,1,2)),
ets = ETS(Turnover ~ error("M") + trend("A") + season("M"))
)
train_combined_fit %>%
forecast(h = "24 months") %>%
autoplot(tail(retail_train, 10*12)) +
autolayer(tail(retail, 10*12), series = "Actual", PI = FALSE, linetype = "dotted") +
labs(title="Victoria Monthly Retail Turnover Forecast: \nARIMA & ETS Model Predictions and Intervals (2021-2022)", y="Turnover ($m)" ) +
theme_minimal()
# Chunk 29
arima_full <- retail %>%
model(
ARIMA(log(Turnover) ~ 1 + pdq(0,0,6) + PDQ(0,1,2))
)
report(arima_full)
# Chunk 30
ets_full <- retail %>%
model(
trend = ETS(Turnover ~ error("M") + trend("A") + season("M"))
)
report(ets_full)
# Chunk 31
retail %>%
model(ARIMA(log(Turnover) ~ 1 + pdq(0,0,6) + PDQ(0,1,2))) %>%
forecast(h = "24 months") %>%
hilo(level = 80) %>%
kable(format = "html",
caption = "Out-of-Sample Point Forecasts and 80% Prediction Intervals for ARIMA Model (Full Data Set)") %>%
kable_styling(full_width = FALSE) %>%
scroll_box(height = "300px")
# Chunk 32
retail %>%
model(
trend = ETS(Turnover ~ error("M") + trend("A") + season("M"))
) %>%
forecast(h = "24 months") %>%
hilo(level = 80) %>%
kable(format = "html",
caption = "Out-of-Sample Point Forecasts and 80% Prediction Intervals for ETS Model (Full Data Set)") %>%
kable_styling(full_width = FALSE) %>%
scroll_box(height = "300px")
# Chunk 33
abs <- read_excel("8501011.xlsx", sheet = "Data1", skip = 9)
# Rename the first column and select only the "Year" and "A3349727C" columns
abs <- abs %>%
rename(Year = names(abs)[1]) %>%
select(Year, A3349727C)
abs <- abs %>%
rename(Turnover = names(abs[2]))
# Convert 'Year' column to Date class
abs$Year <- as.Date(abs$Year)
# Convert 'abs' data.frame to a tsibble
abs_tsibble <- abs %>% as_tsibble(index = Year)
# Chunk 34
# Rename "Year" to "Month" in abs_tsibble
names(abs_tsibble)[names(abs_tsibble) == "Year"] <- "Month"
# Convert 'yearmon' class to 'Date' class
abs_tsibble$Month <- as.Date(abs_tsibble$Month, "%Y %b")
# Change format to "YYYY Month"
abs_tsibble$Month <- format(abs_tsibble$Month, "%Y %B")
# Add "State" and "Industry" columns to abs_tsibble
abs_tsibble$State <- "Victoria"
abs_tsibble$Industry <- "Clothing, footwear and personal accessory retailing"
abs_tsibble$`Series ID` <- "A3349727C"
# Rearrange columns
abs_tsibble <- abs_tsibble %>%
select(State, Industry, `Series ID`, Month, Turnover)
# Convert "Month" column back to 'yearmonth' class
abs_tsibble$Month <- yearmonth(abs_tsibble$Month)
# Convert abs_tsibble to a tbl_ts object
abs_tsibble <- as_tsibble(abs_tsibble, index = Month, key = c(State, Industry, `Series ID`))
# Chunk 35
full_combined_fit <- retail %>%
model(
arima = ARIMA(log(Turnover) ~ 1 + pdq(0,0,6) + PDQ(0,1,2)),
ets = ETS(Turnover ~ error("M") + trend("A") + season("M"))
)
# Chunk 36: fig-9
#| label: fig-9
#| fig-cap: Comparison of selected ARIMA and ETS models for forecasting Victoriaâ€™s monthly retail turnover (2023-2024). The models are fitted to the entire dataset, providing out-of-sample point forecasts and prediction intervals for two years beyond the provided data. The actual ABS data is also included for reference and contrast, shown as the dotted line.
full_combined_fit %>%
forecast(h = "24 months") %>%
autoplot(tail(retail, 10*12)) +
autolayer(tail(abs_tsibble, 10*12), series = "Actual", PI = FALSE, linetype = "dotted") +
labs(title="Victoria Retail Turnover: \nForecast vs Actual ABS Data (2023-2024)",
y="Turnover ($m)" ) +
theme_minimal()
# Chunk 37
retail %>%
model(
"ARIMA(Turnover)" = ARIMA(log(Turnover) ~ 1 + pdq(0,0,6) + PDQ(0,1,2)),
"ETS(Turnover)" = ETS(Turnover ~ error("M") + trend("A") + season("M"))
) %>%
forecast(h = "24 months") %>%
accuracy(abs_tsibble) %>%
arrange(RMSE) %>%
kable(format = "html",
caption = "Accuracy Metrics for Chosen ARIMA and ETS Models Compared with Actual ABS Data") %>%
kable_styling(full_width = FALSE)
library(fpp3)
library(dplyr)
library(ggplot2)
library(plotly)
library(kableExtra)
library(knitr)
library(readxl)
library(tsibble)
abs_test <- read_excel("8501011.xlsx", sheet = "Data1", skip = 9)
View(abs_test)
View(abs_test)
View(retail)
View(abs)
View(abs_test)
View(retail)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(fpp3)
library(dplyr)
library(ggplot2)
library(plotly)
library(kableExtra)
library(knitr)
library(readxl)
library(tsibble)
# Chunk 3
get_my_data <- function(student_id) {
set.seed(student_id)
all_data <- readr::read_rds("https://bit.ly/monashretaildata")
while(TRUE) {
retail <- filter(all_data, `Series ID` == sample(`Series ID`, 1))
if(!any(is.na(fill_gaps(retail)$Turnover))) return(retail)
}
}
# Replace the argument with your student ID
retail <- get_my_data(29796431)
# Chunk 4: fig-1
#| label: fig-1
#| fig-cap: "Original monthly retail turnover in Victoria (clothing, footwear, & personal accessory) from 1982 to 2022"
retail %>%
autoplot(Turnover) +
ggtitle("Monthly Retail Turnover in Victoria (Clothing, Footwear, & Personal Accessory)") +
ylab("Turnover ($m)") +
labs(subtitle = "(1982-2022)") +
theme(plot.title = element_text(size = 12)) +
theme_minimal()
# Chunk 5: fig-2
#| label: fig-2
#| fig-cap: "Seasonal Plot of Monthly Retail Turnover in Victoria (Clothing, Footwear, & Personal Accessory) from 1982 to 2022"
retail %>%
gg_season(Turnover) +
ggtitle("Seasonal Retail Turnover in Victoria (Clothing, Footwear, & Personal Accessory)") +
ylab("Turnover ($m)") +
labs(subtitle = "(1982-2022)") +
theme_minimal()
# Chunk 6: fig-3
#| label: fig-3
#| fig-cap: "Non-stationarity of monthly retail turnover in Victoria: ACF and PACF analysis (1982-2022)"
retail %>%
gg_tsdisplay(Turnover, plot_type = "partial") +
ggtitle("ACF and PACF of Original Monthly Retail Turnover in Victoria") +
labs(subtitle = "(1982-2022)")
# Chunk 7
guerrero_transform <- retail %>%
features(Turnover, guerrero)
kable(guerrero_transform, format = "html", caption = "Guerrero's Selection of Lambda for Retail Turnover Transformation") %>%
kable_styling(full_width = FALSE)
# Chunk 8: fig-4
#| label: fig-4
#| fig-cap: Partial autocorrelation plot of the log-transformed monthly retail turnover in Victoria.
retail %>%
gg_tsdisplay(log(Turnover),
plot_type = "partial") +
ggtitle("Log-Transformed Monthly Retail Turnover in Victoria")
# Chunk 9
# Original data (before log)
retail %>%
features(Turnover, unitroot_kpss) %>%
kable(format = "html",
caption = "Unit Root Test on Original Data (Before Log Transformation)") %>%
kable_styling(full_width = FALSE)
# Chunk 10
# Original data (after log)
retail %>%
mutate(log_turnover = log(Turnover)) %>%
features(log_turnover, unitroot_nsdiffs) %>%
kable(format = "html",
caption = "Unit Root Test on Original Data (After Log Transformation)") %>%
kable_styling(full_width = FALSE)
# Chunk 11
# Data after seasonal difference
retail %>%
mutate(log_turnover = difference(log(Turnover), 12)) %>%
features(log_turnover, unitroot_ndiffs) %>%
kable(format = "html",
caption = "Unit Root Test on Data After Seasonal Difference") %>%
kable_styling(full_width = FALSE)
# Chunk 12: fig-5
#| label: fig-5
#| fig-cap: Partial autocorrelation plot of the seasonally differenced, log-transformed monthly retail turnover data in Victoria.
# Seasonal Difference Only
retail %>%
gg_tsdisplay(
difference(log(Turnover),
lag = 12
),
plot_type = "partial") +
ggtitle("Seasonally Differenced, Log-Transformed Monthly Retail Turnover in Victoria")
# Chunk 13
# ARIMA Models
## 2 models + 1 automatic
# AR(7,0,0)(0,1,0)
# MA(0,0,6)(0,1,2)
# ARMA(0,0,6)(0,1,0) -> less parameters than below
# ARMA(7,0,0)(0,1,2)
# Suggestions:
# AR(4,0,0)(0,1,0) -> Xiaoqian's suggestion -> based on ARIMA function constraints > lag 5 and 6 too large (?)
# decide on seasonal part using PACF, non-seasonal part using ACF -> first 6 lags are significant but no more significant lags for recent lags > simpler than using purely MA because using less terms
# add a constant because we did log and 1 lot of seasonal differencing > still a slight trend noticed
# Create retail training set
retail_train <- retail %>%
slice(1:(nrow(retail)-24))
# Fit ARIMA Models
arima_fit <- retail_train %>%
model(
ar = ARIMA(log(Turnover) ~ 1 + pdq(7,0,0) + PDQ(0,1,0)),
ma = ARIMA(log(Turnover) ~ 1 + pdq(0,0,6) + PDQ(0,1,2)),
arma = ARIMA(log(Turnover) ~ 1 + pdq(0,0,6) + PDQ(0,1,0)),
auto = ARIMA(log(Turnover), stepwise = FALSE, approx = FALSE)
)
# auto = <ARIMA(3,0,2)(0,1,1)[12] w/ drift>
# Chunk 14
arima_fit %>%
select(-State, -Industry) %>%
pivot_longer(everything(),
names_to = "Model name",
values_to = "Orders") %>%
kable(format = "html",
caption = "ARIMA model selection") %>%
kable_styling(full_width = FALSE)
# Chunk 15
glance(arima_fit) %>%
select(-ar_roots, -ma_roots) %>%
arrange(AICc) %>%
kable(format = "html",
caption = "ARIMA Model Fits Sorted by AICc") %>%
kable_styling(full_width = FALSE)
# lowest AIC: auto model
# Chunk 16
# ETS Models
## 2 models + 1 automatic
# multiplicative error + multiplicative seasonality + no trend
# multiplicative error + multiplicative seasonality + added trend
ets_fit <- retail_train %>%
model(
trend = ETS(Turnover ~ error("M") + trend("A") + season("M")),
none = ETS(Turnover ~ error("M") + trend("N") + season("M")),
auto = ETS(Turnover)
)
# auto = ETS(M,N,A)
# observed obvious trend, so test without trend and see what happens
ets_fit %>%
kable(format = "html",
caption = "ETS model selection") %>%
kable_styling(full_width = FALSE)
# Chunk 17
glance(ets_fit) %>%
arrange(AICc) %>%
kable(format = "html",
caption = "ETS Model Fits Sorted by AICc") %>%
kable_styling(full_width = FALSE)
# best model: auto > multiplicative error + no trend + additive seasonality > ETS(M,N,A) > surprising!
# lowest AIC value
# Chunk 18
# Applying ARIMA models to test set
retail_train %>%
model(
ar = ARIMA(log(Turnover) ~ 1 + pdq(7,0,0) + PDQ(0,1,0)),
ma = ARIMA(log(Turnover) ~ 1 + pdq(0,0,6) + PDQ(0,1,2)),
arma = ARIMA(log(Turnover) ~ 1 + pdq(0,0,6) + PDQ(0,1,0)),
auto = ARIMA(log(Turnover) ~ 1 + pdq(3,0,2) + PDQ(0,1,1))
) %>%
forecast(h = "24 months") %>%
accuracy(retail) %>%
arrange(RMSE) %>%
kable(format = "html",
caption = "ARIMA Model Fits on Test Set (sorted by RMSE)") %>%
kable_styling(full_width = FALSE)
# https://af.numbat.space/week7/ex7-sol.html
# RMSE is lowest for MA model surprisingly
# Chunk 19
retail_train %>%
model(
trend = ETS(Turnover ~ error("M") + trend("A") + season("M")),
none = ETS(Turnover ~ error("M") + trend("N") + season("M")),
auto = ETS(Turnover ~ error("M") + trend("N") + season("A"))
) %>%
forecast(h = "24 months") %>%
accuracy(retail) %>%
arrange(RMSE) %>%
kable(format = "html",
caption = "ETS Model Fits on Test Set (sorted by RMSE)") %>%
kable_styling(full_width = FALSE)
# RMSE is lowest for model with trend = ETS(M,A,M)
# auto = ETS(M,N,A)
# However, it's important to note that AIC and AICc are relative measures. They can help you choose the best model from a set of models, but they don't tell you anything about the absolute quality of the model. Other diagnostic checks should also be performed to ensure the model is a good fit for the data.
# Chunk 20
chosen_arima_fit <- retail_train %>%
model(
ARIMA(log(Turnover) ~ 1 + pdq(0,0,6) + PDQ(0,1,2))
)
report(chosen_arima_fit)
# Chunk 21
chosen_ets_fit <- retail_train %>%
model(
trend = ETS(Turnover ~ error("M") + trend("A") + season("M"))
)
report(chosen_ets_fit)
# Chunk 22: fig-6
#| label: fig-6
#| fig-cap: Residual plots for the ARIMA(0,0,6)(0,1,2) model.
chosen_arima_fit %>%
gg_tsresiduals() +
ggtitle("Residuals of Chosen ARIMA Fit")
# Chunk 23
augment(chosen_arima_fit) %>%
features(.innov, ljung_box, lag = 24, dof = 9) %>%
kable(format = "html",
caption = "Ljung-Box Test Results (ARIMA Model)") %>%
kable_styling(full_width = FALSE)
# Chunk 24: fig-7
#| label: fig-7
#| fig-cap: Residual plots for the ETS(M,A,M) model.
chosen_ets_fit %>%
gg_tsresiduals() +
ggtitle("Residuals of Chosen ETS Fit")
# Chunk 25
augment(chosen_ets_fit) %>%
features(.innov, ljung_box, lag = 24) %>%
kable(format = "html",
caption = "Ljung-Box Test Results (ETS Model)") %>%
kable_styling(full_width = FALSE)
# Chunk 26
retail_train %>%
model(ARIMA(log(Turnover) ~ 1 + pdq(0,0,6) + PDQ(0,1,2))) %>%
forecast(h = "24 months") %>%
hilo() %>%
kable(format = "html",
caption = "Point Forecasts for Test Set (ARIMA Model)") %>%
kable_styling(full_width = FALSE) %>%
scroll_box(height = "300px")
# Chunk 27
retail_train %>%
model(
trend = ETS(Turnover ~ error("M") + trend("A") + season("M"))
) %>%
forecast(h = "24 months") %>%
hilo() %>%
kable(format = "html",
caption = "Point Forecasts for Test Set (ETS Model)") %>%
kable_styling(full_width = FALSE) %>%
scroll_box(height = "300px")
# Chunk 28: fig-8
#| label: fig-8
#| fig-cap: Forecast of Victoria's monthly retail turnover for 2021-2022 (test set) using ARIMA and ETS models. The plot shows the model predictions and their respective intervals, providing a range of possible future values.
train_combined_fit <- retail_train %>%
model(
arima = ARIMA(log(Turnover) ~ 1 + pdq(0,0,6) + PDQ(0,1,2)),
ets = ETS(Turnover ~ error("M") + trend("A") + season("M"))
)
train_combined_fit %>%
forecast(h = "24 months") %>%
autoplot(tail(retail_train, 10*12)) +
autolayer(tail(retail, 10*12), series = "Actual", PI = FALSE, linetype = "dotted") +
labs(title="Victoria Monthly Retail Turnover Forecast: \nARIMA & ETS Model Predictions and Intervals (2021-2022)", y="Turnover ($m)" ) +
theme_minimal()
# Chunk 29
arima_full <- retail %>%
model(
ARIMA(log(Turnover) ~ 1 + pdq(0,0,6) + PDQ(0,1,2))
)
report(arima_full)
# Chunk 30
ets_full <- retail %>%
model(
trend = ETS(Turnover ~ error("M") + trend("A") + season("M"))
)
report(ets_full)
# Chunk 31
retail %>%
model(ARIMA(log(Turnover) ~ 1 + pdq(0,0,6) + PDQ(0,1,2))) %>%
forecast(h = "24 months") %>%
hilo(level = 80) %>%
kable(format = "html",
caption = "Out-of-Sample Point Forecasts and 80% Prediction Intervals for ARIMA Model (Full Data Set)") %>%
kable_styling(full_width = FALSE) %>%
scroll_box(height = "300px")
# Chunk 32
retail %>%
model(
trend = ETS(Turnover ~ error("M") + trend("A") + season("M"))
) %>%
forecast(h = "24 months") %>%
hilo(level = 80) %>%
kable(format = "html",
caption = "Out-of-Sample Point Forecasts and 80% Prediction Intervals for ETS Model (Full Data Set)") %>%
kable_styling(full_width = FALSE) %>%
scroll_box(height = "300px")
# Chunk 33
abs <- read_excel("8501011.xlsx", sheet = "Data1", skip = 9)
# Rename the first column and select only the "Year" and "A3349727C" columns
abs <- abs %>%
rename(Year = names(abs)[1]) %>%
select(Year, A3349727C)
abs <- abs %>%
rename(Turnover = names(abs[2]))
# Convert 'Year' column to Date class
abs$Year <- as.Date(abs$Year)
# Convert 'abs' data.frame to a tsibble
abs_tsibble <- abs %>% as_tsibble(index = Year)
# Chunk 34
# Rename "Year" to "Month" in abs_tsibble
names(abs_tsibble)[names(abs_tsibble) == "Year"] <- "Month"
# Convert 'yearmon' class to 'Date' class
abs_tsibble$Month <- as.Date(abs_tsibble$Month, "%Y %b")
# Change format to "YYYY Month"
abs_tsibble$Month <- format(abs_tsibble$Month, "%Y %B")
# Add "State" and "Industry" columns to abs_tsibble
abs_tsibble$State <- "Victoria"
abs_tsibble$Industry <- "Clothing, footwear and personal accessory retailing"
abs_tsibble$`Series ID` <- "A3349727C"
# Rearrange columns
abs_tsibble <- abs_tsibble %>%
select(State, Industry, `Series ID`, Month, Turnover)
# Convert "Month" column back to 'yearmonth' class
abs_tsibble$Month <- yearmonth(abs_tsibble$Month)
# Convert abs_tsibble to a tbl_ts object
abs_tsibble <- as_tsibble(abs_tsibble,
index = Month,
key = c(State, Industry, `Series ID`))
# Chunk 35
full_combined_fit <- retail %>%
model(
arima = ARIMA(log(Turnover) ~ 1 + pdq(0,0,6) + PDQ(0,1,2)),
ets = ETS(Turnover ~ error("M") + trend("A") + season("M"))
)
# Chunk 36: fig-9
#| label: fig-9
#| fig-cap: Comparison of selected ARIMA and ETS models for forecasting Victoriaâ€™s monthly retail turnover (2023-2024). The models are fitted to the entire dataset, providing out-of-sample point forecasts and prediction intervals for two years beyond the provided data. The actual ABS data is also included for reference and contrast, shown as the dotted line.
full_combined_fit %>%
forecast(h = "24 months") %>%
autoplot(tail(retail, 10*12)) +
autolayer(tail(abs_tsibble, 10*12), series = "Actual", PI = FALSE, linetype = "dotted") +
labs(title="Victoria Retail Turnover: \nForecast vs Actual ABS Data (2023-2024)",
y="Turnover ($m)" ) +
theme_minimal()
# Chunk 37
retail %>%
model(
"ARIMA(Turnover)" = ARIMA(log(Turnover) ~ 1 + pdq(0,0,6) + PDQ(0,1,2)),
"ETS(Turnover)" = ETS(Turnover ~ error("M") + trend("A") + season("M"))
) %>%
forecast(h = "24 months") %>%
accuracy(abs_tsibble) %>%
arrange(RMSE) %>%
kable(format = "html",
caption = "Accuracy Metrics for Chosen ARIMA and ETS Models Compared with Actual ABS Data") %>%
kable_styling(full_width = FALSE)
augment(chosen_ets_fit) %>%
features(.innov, ljung_box, lag = 24)
library(fpp3)
library(dplyr)
library(ggplot2)
library(plotly)
library(kableExtra)
library(knitr)
library(readxl)
library(tsibble)
guerrero_transform <- retail %>%
features(Turnover, guerrero)
kable(guerrero_transform, format = "html", caption = "Guerrero's Selection of Lambda for Retail Turnover Transformation") %>%
kable_styling(full_width = FALSE) %>%
row_spec(0, color = "white", background = "black", bold = TRUE)
